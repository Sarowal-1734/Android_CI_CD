name: App Development Pipeline
on:
  workflow_dispatch:
    inputs:
      module:
        type: choice
        required: true
        description: Select Apps to Deploy
        options:
          - Enterprise
          - E-Commerce
          - All
      release_notes:
        type: string
        required: true
        description: "Release Notes"

jobs:
  build:
    name: Android Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checking out branch
        uses: actions/checkout@v3

      - name: Greetings
        if: github.event.inputs.module == E-Commerce
        run: echo "choice is ${{ github.event.inputs.module }}"

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks

      - name: Build Release APK
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleRelease --stacktrace

      - name: Get Enterprise APK Path
        id: enterpriseApk
        run: echo "apkfile=$(find enterprise/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Get E-Commerce APK Path
        id: eCommerceApk
        run: echo "apkfile=$(find eCommerce/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Upload Enterprise APK to Firebase App Distribution
        if: github.event.inputs.module == Enterprise
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID_RELEASE}}
          serviceCredentialsFileContent: ${{ secrets.SERVICE_CREDENTIALS_FILE_RELEASE }}
          groups: testers
          file: ${{ steps.enterpriseApk.outputs.apkfile }}

      - name: Upload Release Build to Artifacts
        if: github.event.inputs.module == E-Commerce
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: ${{ steps.eCommerceApk.outputs.apkfile }}
